version: '3.8'


services:
  # Jaeger для трассировки
  jaeger:
    restart: unless-stopped
    image: jaegertracing/all-in-one:1.53
    ports:
      - "16686:16686"   # UI
      - "14268:14268"   # HTTP collector
      - "6831:6831/udp" # UDP receiver
    networks:
      - observability_net


  # Prometheus 
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      # - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./configs/prometheus:/etc/prometheus  
    networks:
      - observability_net


  # Alertmanager
  alertmanager:
    image: prom/alertmanager:v0.28.0
    restart: unless-stopped
    # копируем шаблон
    volumes:
      - ./configs/prometheus/alertmanager.template.yml:/etc/alertmanager/template.yml
      - ./scripts/alertmanager.sh:/alertmanager.sh
    ports:
      - "9093:9093"
    environment:
      - SMTP_USER=${SMTP_USER_MAIN}  # от кого слать уведомления
      - SMTP_RECEIVER=${SMTP_USER_MAIN} # кому слать уведомления
      - SMTP_PASSWORD=${SMTP_PASSWORD_LOYALTY_HUB} # пароль
    # делаем подстановку переменных окружения в шаблон конфига 
    entrypoint: /alertmanager.sh
    command: /bin/alertmanager --config.file=/etc/alertmanager/alertmanager.yml
    networks:
      - observability_net


  # Grafana
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTANCE_NAME=my-grafana
    networks:
      - observability_net


  # Redis
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: 
      # лимиты памяти
      - redis-server
      - --maxmemory 256mb
      - --maxmemory-policy allkeys-lru
    networks:
      - observability_net
      - grpc_net


  # сбор метрик редиса для прометеуса
  redis_exporter:
    image: oliver006/redis_exporter
    command:
      - --redis.addr=redis://redis:6379
      # - --redis.password=""
    ports:
      - "9121:9121"
    depends_on:
      - redis
    networks:
      - observability_net


networks:
  # сеть для мониторинга и инфраструктуры
  observability_net:
    driver: bridge
    name: observability_net
  # сеть для общения сервисов между собой
  grpc_net:
    driver: bridge
    name: grpc_net
  # # соединение клиент-сервер
  # client_server_net:
  #   driver: bridge
  #   name: client_server_net

    
volumes:
  grafana_data:
  redis_data: